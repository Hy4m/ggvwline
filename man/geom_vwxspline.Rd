% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-vwxspline.R
\name{geom_vwxspline}
\alias{geom_vwxspline}
\title{Variable-Width X-spline Curve Layer}
\usage{
geom_vwxspline(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  width_units = "mm",
  shape = 1,
  open = TRUE,
  repEnds = TRUE,
  angle = "perp",
  lineend = "butt",
  mitrelimit = 4,
  by_x = FALSE,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{width_units}{unit of width.}

\item{shape}{a numeric value (or one per location) that controls the shape
of the X-spline curve relative to the locations.}

\item{open}{a boolean indicating whether to connect the last location back
to the first location to produce a closed line.}

\item{repEnds}{a logical indicating whether to replicate the first and last
control points (so that the X-spline starts and ends at the first and last
control points).}

\item{angle}{either "perp" or a numeric value describing a fixed orientation
for the line width.}

\item{lineend}{the line ending style; one of "round", "mitre", "butt",
"square", or "extend".}

\item{mitrelimit}{a numeric that controls when a mitre join is converted to
a bevel join or a mitre ending is converted to a square ending.}

\item{by_x}{logical, if TRUE will calculate the width based on x-axis.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
Layer function to draw variable-width X-spline curve.
}
\section{Aesthetics}{

\code{geom_vwxspline()} understands the following aesthetics (required aesthetics are in bold):
    \itemize{
      \item \strong{\code{x}}
      \item \strong{\code{y}}
      \item \code{width}
      \item \code{alpha}
      \item \code{colour}
      \item \code{fill}
      \item \code{linetype}
      \item \code{size}
  }
}

